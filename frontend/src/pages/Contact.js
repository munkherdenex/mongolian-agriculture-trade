import React, { useState } from "react";
import { Typography, Container, Box, TextField, Button, Alert } from "@mui/material";
import axios from "axios";

function Contact() {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: "",
  });

  const [response, setResponse] = useState({ success: null, message: "" });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const res = await axios.post("http://localhost:5000/api/contact", formData);
      setResponse({ success: true, message: res.data.message });
      setFormData({ name: "", email: "", message: "" });
    } catch (error) {
      setResponse({ success: false, message: "–ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞. –î–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–Ω–æ —É—É." });
    }
  };

  return (
    <>
      <Container>
        <Box sx={{ textAlign: "center", py: 4, mb: 3 }}>
          <Typography variant="h3" gutterBottom>
            –ë–∏–¥—ç–Ω—Ç—ç–π —Ö–æ–ª–±–æ–≥–¥–æ—Ö
          </Typography>
          <Typography variant="h6" color="textSecondary">
            –°–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç—ç—ç –∏–ª–≥—ç—ç—Ö —ç—Å–≤—ç–ª —à—É—É–¥ —Ö–æ–ª–±–æ–≥–¥–æ–æ—Ä–æ–π
          </Typography>
        </Box>

        <Box sx={{ mb: 4 }}>
          <Typography variant="h5" gutterBottom>
            –•–æ–ª–±–æ–æ –±–∞—Ä–∏—Ö –º—ç–¥—ç—ç–ª—ç–ª
          </Typography>
          <Typography variant="body1">üìû –£—Ç–∞—Å: +976 9119-6159</Typography>
          <Typography variant="body1">üìß –ò–º—ç–π–ª: munkherdenex@gmail.com</Typography>
          <Typography variant="body1">üìç –•–∞—è–≥: –£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä, –ú–æ–Ω–≥–æ–ª</Typography>
        </Box>

        <Box sx={{ mb: 4 }}>
          <Typography variant="h5" gutterBottom>
            –°–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç –∏–ª–≥—ç—ç—Ö
          </Typography>
          {response.message && (
            <Alert severity={response.success ? "success" : "error"} sx={{ mb: 2 }}>
              {response.message}
            </Alert>
          )}
          <form onSubmit={handleSubmit}>
            <TextField
              fullWidth
              label="–¢–∞–Ω—ã –Ω—ç—Ä"
              variant="outlined"
              margin="normal"
              name="name"
              value={formData.name}
              onChange={handleChange}
              required
            />
            <TextField
              fullWidth
              label="–ò–º—ç–π–ª —Ö–∞—è–≥"
              type="email"
              variant="outlined"
              margin="normal"
              name="email"
              value={formData.email}
              onChange={handleChange}
              required
            />
            <TextField
              fullWidth
              label="–°–∞–Ω–∞–ª —Ö“Ø—Å—ç–ª—Ç"
              multiline
              rows={4}
              variant="outlined"
              margin="normal"
              name="message"
              value={formData.message}
              onChange={handleChange}
              required
            />
            <Button
              type="submit"
              variant="contained"
              size="large"
              sx={{
                mt: 2,
                backgroundColor: "#6A994E",
                color: "white",
                '&:hover': {
                  backgroundColor: "#588b47",
                },
              }}
            >
              –ò–ª–≥—ç—ç—Ö
            </Button>
          </form>
        </Box>
      </Container>

    </>
  );
}

export default Contact;
